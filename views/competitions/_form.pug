.form-group
  label(for="title") 공모전명
  input.form-control(type="text", name="title", placeholder="What's your competition?", value=competition.title)
.form-group
  label(for="content") 공모요강
  textarea.form-control#summernote(name="content" )= competition.content

  //- textarea.form-control#summernote(name="content" )= competition.content


.form-group
  label(for="field") 분야 &nbsp;
  select.form-control(name="field")= competition.field
    option(value="Planning / Ideas") 기획/아이디어
    option(value="Advertising / Marketing") 광고/마케팅
    option(value="Articles / Reports") 논문/리포트
    option(value="Video / UCC / Photo") 영상/UCC/사진
    option(value="Design / Character / Webtoon") 디자인/캐릭터/웹툰
    option(value="Web / Mobile / Flash") 웹/모바일/플래시
    option(value="Games / Software")  게임/소프트웨어
    option(value="Science / Engineering") 과학/공학
    option(value="Literature / Writing / Scenario") 문학/글/시나리오
    option(value="Architecture / Construction / Interior") 건축/건설/인테리어
    option(value="Arts / Music / Entertainment") 예체능/미술/음악
    option(value="External Activities / Supporters") 대외활동/서포터즈
    option(value="Volunteer") 봉사활동
    option(value="Employment / Startup")  취업/창업
    option(value="Overseas") 해외
    option(value="Others")  기타
.form-group
  label(for="participant") 응시대상 &nbsp;
  select.form-control(name="participant")= competition.participant
    option(value="No limit") 제한없음
    option(value="Public") 일반인
    option(value="College") 대학생/대학원생
    option(value="Youth") 청소년
    option(value="child") 어린이
    option(value="Others") 기타
.form-group
  label(for="sponsor") 주최사 &nbsp;
  select.form-control(name="sponsor")= competition.sponsor
    option(value="Government / Public institutions") 정부/공공기관
    option(value="Public enterprise") 공기업
    option(value="major company") 대기업
    option(value="Newspaper / Broadcast / Press") 신문/방송/언론
    option(value="Foreign companies") 외국계기업
    option(value="Medium / Small / Venture Companies") 중견/중소/벤처기업
    option(value="Nonprofit / Association / Foundation") 비영리/협회/재단
    option(value="Overseas") 해외
    option(value="Others") 기타
.form-group
  label(for="award") 시상내역 &nbsp;
  select.form-control(name="award")= competition.award
    option(value="5000") 5천만원이상
    option(value="5000~3000") 5천만원 ~ 3천만원
    option(value="3000~1000") 3천만원 ~ 1천만원
    option(value="1000") 1천만원이하
    option(value="Employment benefits") 취업특전
    option(value="Addition to entrance examination") 입시가산점
    option(value="Intern") 인턴채용
    option(value="Full-time employee") 정직원채용
    option(value="Others") 기타

.form-group
  label(for="startTime") 접수시작
  input.form-control(type="datetime-local", name="startTime", value=competition.startTime)
.form-group
  label(for="endTime") 접수종료
  input.form-control(type="datetime-local", name="endTime", value=competition.endTime)
.form-group
  label(for="status") 상태 &nbsp;
  select.form-control(name="status")= competition.status
    option(value="Accepting") 접수중
    option(value="Deadline imminent") 마감임박
    option(value="Deadline") 마감
.form-group
  label(for="tags") 태그
  input.form-control(type="text", name="tags", placeholder="tags separated by spaces", value=competition.tags ? competition.tags.join(" ") : "")
.form-group
  label(for='exampleInputFile') 포스터 
  input#exampleInputFile.form-control-file(type='file', aria-describedby='fileHelp')
  small#fileHelp.form-text.text-muted
    | 포스터가 있을 경우 파일을 첨부해주세요.
.form-group
  label(for="homepage") 홈페이지
  input.form-control(type="text", name="homepage", placeholder="homepage url?", value=competition.homepage)
.form-group
  label(for="person") 담당자
  input.form-control(type="text", name="person", placeholder="What's your person?", value=competition.person)
.form-group
  label(for="contact") 연락처
  input.form-control(type="text", name="contact", placeholder="What's your contact?", value=competition.title)



.form-group
  label(for='location') 장소
  input.form-control(type='text' name='location' placeholder="Where is the place?" value=competition.location)

  //- .map_wrap
  //-   #map(style='width:100%;height:100%;position:relative;overflow:hidden;')
  //-   .hAddr
  //-     span.title 지도중심기준 행정동 주소정보
  //-     span#centerAddr
  //- script(type='text/javascript', src='//dapi.kakao.com/v2/maps/sdk.js?appkey=d12b5cc694e0ca85431b8fb034a4ffba&libraries=services')
  //- script.
  //-   var mapContainer = document.getElementById('map'), // 지도를 표시할 div
  //-   mapOption = {
  //-   center: new daum.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표
  //-   level: 1 // 지도의 확대 레벨
  //-   };
  //-   // 지도를 생성합니다
  //-   var map = new daum.maps.Map(mapContainer, mapOption);
  //-   // 주소-좌표 변환 객체를 생성합니다
  //-   var geocoder = new daum.maps.services.Geocoder();
  //-   var marker = new daum.maps.Marker(), // 클릭한 위치를 표시할 마커입니다
  //-   infowindow = new daum.maps.InfoWindow({zindex:1}); // 클릭한 위치에 대한 주소를 표시할 인포윈도우입니다
  //-   // 현재 지도 중심좌표로 주소를 검색해서 지도 좌측 상단에 표시합니다
  //-   searchAddrFromCoords(map.getCenter(), displayCenterInfo);
  //-   // 지도를 클릭했을 때 클릭 위치 좌표에 대한 주소정보를 표시하도록 이벤트를 등록합니다
  //-   daum.maps.event.addListener(map, 'click', function(mouseEvent) {
  //-   searchDetailAddrFromCoords(mouseEvent.latLng, function(result, status) {
  //-   if (status === daum.maps.services.Status.OK) {
  //-   var detailAddr = !!result[0].road_address ? '<div>도로명주소 : ' + result[0].road_address.address_name + '</div>' : '';
  //-   detailAddr += '<div>지번 주소 : ' + result[0].address.address_name + '</div>';
  //-   var content = '<div class="bAddr">' +
  //-   '<span class="title">법정동 주소정보</span>' +
  //-   detailAddr +
  //-   '</div>';
  //-   // 마커를 클릭한 위치에 표시합니다
  //-   marker.setPosition(mouseEvent.latLng);
  //-   marker.setMap(map);
  //-   // 인포윈도우에 클릭한 위치에 대한 법정동 상세 주소정보를 표시합니다
  //-   infowindow.setContent(content);
  //-   infowindow.open(map, marker);
  //-   }
  //-   });
  //-   });
  //-   // 중심 좌표나 확대 수준이 변경됐을 때 지도 중심 좌표에 대한 주소 정보를 표시하도록 이벤트를 등록합니다
  //-   daum.maps.event.addListener(map, 'idle', function() {
  //-   searchAddrFromCoords(map.getCenter(), displayCenterInfo);
  //-   });
  //-   function searchAddrFromCoords(coords, callback) {
  //-   // 좌표로 행정동 주소 정보를 요청합니다
  //-   geocoder.coord2RegionCode(coords.getLng(), coords.getLat(), callback);
  //-   }
  //-   function searchDetailAddrFromCoords(coords, callback) {
  //-   // 좌표로 법정동 상세 주소 정보를 요청합니다
  //-   geocoder.coord2Address(coords.getLng(), coords.getLat(), callback);
  //-   }
  //-   // 지도 좌측상단에 지도 중심좌표에 대한 주소정보를 표출하는 함수입니다
  //-   function displayCenterInfo(result, status) {
  //-   if (status === daum.maps.services.Status.OK) {
  //-   var infoDiv = document.getElementById('centerAddr');
  //-   for(var i = 0; i < result.length; i++) {
  //-   // 행정동의 region_type 값은 'H' 이므로
  //-   if (result[i].region_type === 'H') {
  //-   infoDiv.innerHTML = result[i].address_name;
  //-   break;
  //-   }
  //-   }
  //-   }
  //-   }



  #map(style='width:100%;height:350px;')
  script(type='text/javascript', src='//dapi.kakao.com/v2/maps/sdk.js?appkey=d12b5cc694e0ca85431b8fb034a4ffba')
  script.
    var mapContainer = document.getElementById('map'), // 지도를 표시할 div
    mapOption = {
    center: new daum.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표
    level: 3 // 지도의 확대 레벨
    };
    // 지도를 표시할 div와  지도 옵션으로  지도를 생성합니다
    var map = new daum.maps.Map(mapContainer, mapOption);

 


  



        

script.

  $('#summernote').summernote({
  placeholder: 'Please enter your content.',
  tabsize: 2,
  height: 100
  });
  
  $.extend($.summernote.plugins, {
      'myenter': function (context) {
          this.events = {
              'summernote.enter': function (we, event) {
                  // custom enter key
                  pasteHtmlAtCaret($.summernote.dom.blank);
                  event.preventDefault()
              }
          }
      },
  })

//-         //스팸..
//- script.
//-   $(document).ready(function() {
//-   $('#comment_form').submit(function() {
//-   $(this).ajaxSubmit({
//-   error: function(xhr) {
//-   status('Error: ' + xhr.status);
//-   },
//-   success: function(response) {
//-   console.log(response);
//-   }
//-   });
//-   //Very important line, it disable the page refresh.
//-   return false;
//-   });
//-   });

  

  //- function pasteHtmlAtCaret(html) {
  //-     var sel, range;
  //-     if (window.getSelection) {
  //-         // IE9 and non-IE
  //-         sel = window.getSelection();
  //-         if (sel.getRangeAt && sel.rangeCount) {
  //-             range = sel.getRangeAt(0);
  //-             range.deleteContents();

  //-             // Range.createContextualFragment() would be useful here but is
  //-             // only relatively recently standardized and is not supported in
  //-             // some browsers (IE9, for one)
  //-             var el = document.createElement("div");
  //-             el.innerHTML = html;
  //-             var frag = document.createDocumentFragment(), node, lastNode;
  //-             while ( (node = el.firstChild) ) {
  //-                 lastNode = frag.appendChild(node);
  //-             }
  //-             range.insertNode(frag);

  //-             // Preserve the selection
  //-             if (lastNode) {
  //-                 range = range.cloneRange();
  //-                 range.setStartAfter(lastNode);
  //-                 range.collapse(true);
  //-                 sel.removeAllRanges();
  //-                 sel.addRange(range);
  //-             }
  //-         }
  //-     } else if (document.selection && document.selection.type != "Control") {
  //-         // IE < 9
  //-         document.selection.createRange().pasteHTML(html);
  //-     }
  //- }


